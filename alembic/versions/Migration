"""add points system tables

Revision ID: add_points_system_001
Revises: 
Create Date: 2024-01-15 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'add_points_system_001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # إنشاء جدول رصيد النقاط
    op.create_table('user_points',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('balance', sa.Integer(), nullable=False, server_default='0'),
        sa.Column('total_purchased', sa.Integer(), server_default='0'),
        sa.Column('total_spent', sa.Integer(), server_default='0'),
        sa.Column('total_refunded', sa.Integer(), server_default='0'),
        sa.Column('daily_limit', sa.Integer(), server_default='1000'),
        sa.Column('daily_used', sa.Integer(), server_default='0'),
        sa.Column('last_reset_date', sa.DateTime(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_points_user_id'), 'user_points', ['user_id'], unique=True)

    # إنشاء جدول باقات النقاط
    op.create_table('point_packages',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('points', sa.Integer(), nullable=False),
        sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column('original_price', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('is_popular', sa.Boolean(), server_default='false'),
        sa.Column('is_active', sa.Boolean(), server_default='true'),
        sa.Column('sort_order', sa.Integer(), server_default='0'),
        sa.Column('discount_percentage', sa.Integer(), server_default='0'),
        sa.Column('promo_text', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_point_packages_is_active'), 'point_packages', ['is_active'], unique=False)

    # إنشاء جدول معاملات النقاط
    op.create_table('point_transactions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('type', sa.Enum('PURCHASE', 'DEDUCT', 'REFUND', 'BONUS', 'TRANSFER', 'EXPIRED', name='transactiontype'), nullable=False),
        sa.Column('amount', sa.Integer(), nullable=False),
        sa.Column('balance_before', sa.Integer(), nullable=False),
        sa.Column('balance_after', sa.Integer(), nullable=False),
        sa.Column('reference_type', sa.String(), nullable=True),
        sa.Column('reference_id', sa.Integer(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('metadata', sa.JSON(), nullable=True),
        sa.Column('payment_method', sa.Enum('CREDIT_CARD', 'DEBIT_CARD', 'PAYPAL', 'BANK_TRANSFER', 'APPLE_PAY', 'GOOGLE_PAY', 'MADA', 'STC_PAY', name='paymentmethod'), nullable=True),
        sa.Column('payment_reference', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['user_points.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_created', 'point_transactions', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_type_created', 'point_transactions', ['type', 'created_at'], unique=False)
    op.create_index(op.f('ix_point_transactions_created_at'), 'point_transactions', ['created_at'], unique=False)

    # إنشاء جدول تسعير الخدمات
    op.create_table('service_pricing',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('service_type', sa.Enum('SEO_ANALYSIS', 'SEO_OPTIMIZATION', 'AI_DESCRIPTION', 'KEYWORD_RESEARCH', 'COMPETITOR_ANALYSIS', 'BULK_OPTIMIZATION', 'STORE_SYNC', 'MONTHLY_REPORT', name='servicetype'), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('points_cost', sa.Integer(), nullable=False),
        sa.Column('is_active', sa.Boolean(), server_default='true'),
        sa.Column('min_plan', sa.String(), server_default='free'),
        sa.Column('icon', sa.String(), nullable=True),
        sa.Column('category', sa.String(), nullable=True),
        sa.Column('estimated_time', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('service_type')
    )

    # إنشاء جدول مشتريات الباقات
    op.create_table('point_package_purchases',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('package_id', sa.Integer(), nullable=False),
        sa.Column('points_purchased', sa.Integer(), nullable=False),
        sa.Column('price_paid', sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column('payment_method', sa.Enum('CREDIT_CARD', 'DEBIT_CARD', 'PAYPAL', 'BANK_TRANSFER', 'APPLE_PAY', 'GOOGLE_PAY', 'MADA', 'STC_PAY', name='paymentmethod'), nullable=False),
        sa.Column('payment_reference', sa.String(), nullable=True),
        sa.Column('status', sa.String(), server_default='completed'),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['package_id'], ['point_packages.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['user_points.id'], ),
        sa.PrimaryKeyConstraint('id')
    )

    # إنشاء جدول استخدام الخدمات
    op.create_table('service_usage',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('service_type', sa.Enum('SEO_ANALYSIS', 'SEO_OPTIMIZATION', 'AI_DESCRIPTION', 'KEYWORD_RESEARCH', 'COMPETITOR_ANALYSIS', 'BULK_OPTIMIZATION', 'STORE_SYNC', 'MONTHLY_REPORT', name='servicetype'), nullable=False),
        sa.Column('points_spent', sa.Integer(), nullable=False),
        sa.Column('transaction_id', sa.Integer(), nullable=True),
        sa.Column('product_id', sa.Integer(), nullable=True),
        sa.Column('store_id', sa.Integer(), nullable=True),
        sa.Column('result_data', sa.JSON(), nullable=True),
        sa.Column('status', sa.String(), server_default='completed'),
        sa.Column('error_message', sa.Text(), nullable=True),
        sa.Column('processing_time_ms', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('completed_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['product_id'], ['salla_products.id'], ),
        sa.ForeignKeyConstraint(['store_id'], ['salla_stores.id'], ),
        sa.ForeignKeyConstraint(['transaction_id'], ['point_transactions.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_service_created', 'service_usage', ['user_id', 'service_type', 'created_at'], unique=False)


def downgrade():
    # حذف الجداول بالترتيب العكسي
    op.drop_index('idx_user_service_created', table_name='service_usage')
    op.drop_table('service_usage')
    op.drop_table('point_package_purchases')
    op.drop_table('service_pricing')
    op.drop_index(op.f('ix_point_transactions_created_at'), table_name='point_transactions')
    op.drop_index('idx_type_created', table_name='point_transactions')
    op.drop_index('idx_user_created', table_name='point_transactions')
    op.drop_table('point_transactions')
    op.drop_index(op.f('ix_point_packages_is_active'), table_name='point_packages')
    op.drop_table('point_packages')
    op.drop_index(op.f('ix_user_points_user_id'), table_name='user_points')
    op.drop_table('user_points')
    
    # حذف Enums
    op.execute('DROP TYPE IF EXISTS transactiontype')
    op.execute('DROP TYPE IF EXISTS paymentmethod')
    op.execute('DROP TYPE IF EXISTS servicetype')