# test_email.py - ุณูุฑูุจุช ุงุฎุชุจุงุฑ ุฅุนุฏุงุฏุงุช ุงูุฅูููู
import asyncio
import os
from email_service import email_service, test_email_connection

async def test_email_setup():
    """ุงุฎุชุจุงุฑ ุดุงูู ูุฅุนุฏุงุฏุงุช ุงูุฅูููู"""
    
    print("๐ ุจุฏุก ุงุฎุชุจุงุฑ ุฅุนุฏุงุฏุงุช ุงูุฅูููู...")
    print("=" * 50)
    
    # 1๏ธโฃ ูุญุต ูุชุบูุฑุงุช ุงูุจูุฆุฉ
    print("๐ ูุญุต ูุชุบูุฑุงุช ุงูุจูุฆุฉ:")
    required_vars = {
        'ZOHO_EMAIL_USERNAME': os.getenv('ZOHO_EMAIL_USERNAME'),
        'ZOHO_EMAIL_PASSWORD': os.getenv('ZOHO_EMAIL_PASSWORD'),
        'FROM_EMAIL': os.getenv('FROM_EMAIL'),
        'FROM_NAME': os.getenv('FROM_NAME')
    }
    
    all_good = True
    for var_name, var_value in required_vars.items():
        if var_value:
            # ุฅุฎูุงุก ูููุฉ ุงููุฑูุฑ ุฌุฒุฆูุงู
            if 'PASSWORD' in var_name:
                display_value = f"{var_value[:3]}***{var_value[-3:]}" if len(var_value) > 6 else "***"
            else:
                display_value = var_value
            print(f"   โ {var_name}: {display_value}")
        else:
            print(f"   โ {var_name}: ุบูุฑ ูุญุฏุฏ")
            all_good = False
    
    if not all_good:
        print("\nโ ุจุนุถ ุงููุชุบูุฑุงุช ุงููุทููุจุฉ ุบูุฑ ูุญุฏุฏุฉ!")
        print("๐ก ุชุญูู ูู ููู .env ุฃู ูุชุบูุฑุงุช ุงูุจูุฆุฉ")
        return False
    
    # 2๏ธโฃ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
    print(f"\n๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจุฎุงุฏู SMTP...")
    try:
        connection_success = await test_email_connection()
        if connection_success:
            print("   โ ุงูุงุชุตุงู ูุฌุญ!")
        else:
            print("   โ ูุดู ุงูุงุชุตุงู!")
            return False
    except Exception as e:
        print(f"   โ ุฎุทุฃ ูู ุงูุงุชุตุงู: {str(e)}")
        return False
    
    # 3๏ธโฃ ุงุฎุชุจุงุฑ ุฅุฑุณุงู ุฅูููู
    print(f"\n๐ง ุงุฎุชุจุงุฑ ุฅุฑุณุงู ุฅูููู...")
    test_email = input("ุฃุฏุฎู ุฅูููู ุงูุงุฎุชุจุงุฑ (ุฃู ุงุชุฑูู ูุงุฑุบ ููุชุฎุทู): ").strip()
    
    if test_email:
        try:
            success = await email_service.send_email_with_retry(
                to_email=test_email,
                subject="๐งช ุงุฎุชุจุงุฑ ุฅุนุฏุงุฏุงุช ุงูุฅูููู",
                html_content="""
                <div style="font-family: Arial, sans-serif; text-align: center; padding: 20px;">
                    <h2>๐ ูุฌุญ ุงูุงุฎุชุจุงุฑ!</h2>
                    <p>ุชู ุฅุฑุณุงู ูุฐุง ุงูุฅูููู ูุงุฎุชุจุงุฑ ุฅุนุฏุงุฏุงุช Zoho SMTP</p>
                    <p>ุฅุฐุง ูุตูู ูุฐุง ุงูุฅููููุ ูุฅู ุงูุฅุนุฏุงุฏุงุช ุชุนูู ุจุดูู ุตุญูุญ โ</p>
                    <hr>
                    <small>ุฅูููู ุชููุงุฆู ูู ูุธุงู ุงุฎุชุจุงุฑ ุงูุฅูููู</small>
                </div>
                """,
                text_content="ูุฌุญ ุงุฎุชุจุงุฑ ุงูุฅูููู! ุงูุฅุนุฏุงุฏุงุช ุชุนูู ุจุดูู ุตุญูุญ."
            )
            
            if success:
                print("   โ ุชู ุฅุฑุณุงู ุฅูููู ุงูุงุฎุชุจุงุฑ ุจูุฌุงุญ!")
                print(f"   ๐ฉ ุชุญูู ูู ุตูุฏูู ุงููุงุฑุฏ ูู {test_email}")
            else:
                print("   โ ูุดู ุฅุฑุณุงู ุฅูููู ุงูุงุฎุชุจุงุฑ!")
                return False
                
        except Exception as e:
            print(f"   โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุงุฎุชุจุงุฑ: {str(e)}")
            return False
    else:
        print("   โญ๏ธ ุชู ุชุฎุทู ุงุฎุชุจุงุฑ ุงูุฅุฑุณุงู")
    
    print("\n" + "=" * 50)
    print("โ ุงูุชูู ุงุฎุชุจุงุฑ ุงูุฅุนุฏุงุฏุงุช ุจูุฌุงุญ!")
    print("๐ ููููู ุงูุขู ุงุณุชุฎุฏุงู ุฎุฏูุฉ ุงูุฅูููู ูู ุงูุชุทุจูู")
    
    return True

async def troubleshoot_common_issues():
    """ุฏููู ุญู ุงููุดุงูู ุงูุดุงุฆุนุฉ"""
    
    print("\n๐ง ุฏููู ุญู ุงููุดุงูู ุงูุดุงุฆุนุฉ:")
    print("=" * 40)
    
    issues_solutions = {
        "โ Connection already using TLS": [
            "โข ุชุฃูุฏ ูู ุงุณุชุฎุฏุงู ุงููููุฐ 587 ูุน STARTTLS",
            "โข ูุง ุชุณุชุฎุฏู ุงููููุฐ 465 ูุน STARTTLS",
            "โข ุชุญูู ูู ุฅุนุฏุงุฏุงุช TLS ูู ุงูููุฏ"
        ],
        "โ Relaying disallowed": [
            "โข ุชุญูู ูู ุตุญุฉ ุงุณู ุงููุณุชุฎุฏู ููููุฉ ุงููุฑูุฑ",
            "โข ุชุฃูุฏ ูู ุฃู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ูุดุท ูู Zoho",
            "โข ุงุณุชุฎุฏู App Password ุฅุฐุง ูุงู 2FA ูููุนู",
            "โข ุชุญูู ูู ุฅุนุฏุงุฏุงุช SMTP ูู ุญุณุงุจ Zoho"
        ],
        "โ Authentication failed": [
            "โข ุชุญูู ูู ุตุญุฉ ุจูุงูุงุช ุชุณุฌูู ุงูุฏุฎูู",
            "โข ุงุณุชุฎุฏู App Password ุจุฏูุงู ูู ูููุฉ ุงููุฑูุฑ ุงูุนุงุฏูุฉ",
            "โข ุชุฃูุฏ ูู ุชูุนูู IMAP/SMTP ูู ุฅุนุฏุงุฏุงุช Zoho"
        ],
        "โ Connection timeout": [
            "โข ุชุญูู ูู ุงูุงุชุตุงู ุจุงูุฅูุชุฑูุช",
            "โข ูุฏ ูููู ููุงู ุญุฌุจ ูููููุฐ 587",
            "โข ุฌุฑุจ ุงุณุชุฎุฏุงู VPN ุฅุฐุง ูุงู ูู ุจูุฆุฉ ูุคุณุณูุฉ"
        ]
    }
    
    for issue, solutions in issues_solutions.items():
        print(f"\n{issue}:")
        for solution in solutions:
            print(f"  {solution}")

def show_setup_guide():
    """ุฏููู ุงูุฅุนุฏุงุฏ ุฎุทูุฉ ุจุฎุทูุฉ"""
    
    print("\n๐ ุฏููู ุงูุฅุนุฏุงุฏ ุฎุทูุฉ ุจุฎุทูุฉ:")
    print("=" * 40)
    
    steps = [
        "1๏ธโฃ ุฅูุดุงุก ุญุณุงุจ Zoho Mail ุฃู ุงุณุชุฎุฏุงู ุญุณุงุจ ููุฌูุฏ",
        "2๏ธโฃ ุชุณุฌูู ุงูุฏุฎูู ูู Zoho Mail Admin Console",
        "3๏ธโฃ ุชูุนูู IMAP/SMTP ูู ุงูุฅุนุฏุงุฏุงุช",
        "4๏ธโฃ ุฅูุดุงุก App Password (ุฅุฐุง ูุงู 2FA ูููุนู)",
        "5๏ธโฃ ุถุจุท ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูู ููู .env",
        "6๏ธโฃ ุชุดุบูู ุณูุฑูุจุช ุงูุงุฎุชุจุงุฑ ูุฐุง",
        "7๏ธโฃ ุงุฎุชุจุงุฑ ุฅุฑุณุงู ุฅูููู ุญูููู"
    ]
    
    for step in steps:
        print(f"  {step}")
    
    print(f"\n๐ก ูุตุงุฆุญ ุฅุถุงููุฉ:")
    print(f"  โข ุงุณุชุฎุฏู ูุทุงู ูุฎุตุต ููุธูุฑ ุฃูุซุฑ ุงุญุชุฑุงููุฉ")
    print(f"  โข ุงุญุชูุธ ุจูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู App Passwords")
    print(f"  โข ุฑุงูุจ ุญุฏูุฏ ุงูุฅุฑุณุงู ุงูููููุฉ ูู Zoho")

async def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    
    print("๐ ุฃุฏุงุฉ ุงุฎุชุจุงุฑ ูุชุดุฎูุต ุฅุนุฏุงุฏุงุช Zoho Email")
    print("=" * 50)
    
    while True:
        print("\nุงุฎุชุฑ ุงูุนูููุฉ:")
        print("1๏ธโฃ ุงุฎุชุจุงุฑ ุงูุฅุนุฏุงุฏุงุช ุงูุญุงููุฉ")
        print("2๏ธโฃ ุนุฑุถ ุฏููู ุญู ุงููุดุงูู")
        print("3๏ธโฃ ุนุฑุถ ุฏููู ุงูุฅุนุฏุงุฏ")
        print("0๏ธโฃ ุฎุฑูุฌ")
        
        choice = input("\nุงูุฎูุงุฑ: ").strip()
        
        if choice == "1":
            await test_email_setup()
        elif choice == "2":
            await troubleshoot_common_issues()
        elif choice == "3":
            show_setup_guide()
        elif choice == "0":
            print("๐ ุฅูู ุงูููุงุก!")
            break
        else:
            print("โ ุฎูุงุฑ ุบูุฑ ุตุญูุญุ ุญุงูู ูุฑุฉ ุฃุฎุฑู")

if __name__ == "__main__":
    # ุชุดุบูู ุงูุงุฎุชุจุงุฑ
    asyncio.run(main())